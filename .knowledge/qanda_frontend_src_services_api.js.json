{"is_source_file": true, "format": "JavaScript", "description": "This file contains API utility functions for making HTTP requests to various backend endpoints, including health checks, question-asking, document management, and user management. It defines URL normalization, a generic fetch helper, and exports functions for interacting with the backend API.", "external_files": ["fetch (built-in), process.env (Node.js environment variables)"], "external_methods": ["fetch"], "published": ["healthCheck", "askQuestion", "listDocuments", "createDocument", "getDocument", "deleteDocument", "addDocumentChunk", "listUsers", "createUser", "getUser", "updateUser"], "classes": [], "methods": [{"name": "http(path, options = {})", "description": "A minimal wrapper around fetch that handles URL construction, headers, JSON parsing, and error handling.", "scope": "", "scopeKind": ""}, {"name": "healthCheck()", "description": "Performs a GET request to check backend health status.", "scope": "", "scopeKind": ""}, {"name": "askQuestion({ question, user_id })", "description": "Sends a question to the backend QA endpoint and returns an answer with references.", "scope": "", "scopeKind": ""}, {"name": "listDocuments()", "description": "Retrieves a list of all documents.", "scope": "", "scopeKind": ""}, {"name": "createDocument(doc)", "description": "Creates a new document with optional chunks.", "scope": "", "scopeKind": ""}, {"name": "getDocument(id)", "description": "Retrieves a specific document by its ID.", "scope": "", "scopeKind": ""}, {"name": "deleteDocument(id)", "description": "Deletes a document by its ID.", "scope": "", "scopeKind": ""}, {"name": "addDocumentChunk(id, chunk)", "description": "Adds a chunk of text to an existing document.", "scope": "", "scopeKind": ""}, {"name": "listUsers()", "description": "Lists all user accounts.", "scope": "", "scopeKind": ""}, {"name": "createUser(user)", "description": "Creates a new user account.", "scope": "", "scopeKind": ""}, {"name": "getUser(id)", "description": "Retrieves user information by user ID.", "scope": "", "scopeKind": ""}, {"name": "updateUser(id, user)", "description": "Updates an existing user's data.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "JSON.stringify", "resp.headers.get", "resp.ok", "resp.json", "resp.text"], "search-terms": ["API utility functions", "normalize URL", "HTTP fetch helper", "backend API endpoints", "document management functions", "user management functions", "environment variable", "health check", "question API"], "state": 2, "file_id": 14, "knowledge_revision": 45, "git_revision": "9de67aea22f9ef72c351bbea6685876d4afa8325", "revision_history": [{"29": ""}, {"45": "9de67aea22f9ef72c351bbea6685876d4afa8325"}], "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^const BASE_URL = NORMALIZED.replace(\\/\\\\\\/apiqa\\\\\\/?$\\/i, \"\\/api\\/\");$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "NORMALIZED", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^const NORMALIZED = RAW_BASE.endsWith(\"\\/\") ? RAW_BASE : `${RAW_BASE}\\/`;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "RAW_BASE", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^const RAW_BASE = process.env.REACT_APP_BACKEND_API_URL || \"http:\\/\\/localhost:3001\\/api\\/\";$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "addDocumentChunk", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function addDocumentChunk(id, chunk) {$/", "language": "JavaScript", "kind": "function", "signature": "(id, chunk)"}, {"_type": "tag", "name": "askQuestion", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function askQuestion({ question, user_id }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ question, user_id })"}, {"_type": "tag", "name": "createDocument", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function createDocument(doc) {$/", "language": "JavaScript", "kind": "function", "signature": "(doc)"}, {"_type": "tag", "name": "createUser", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function createUser(user) {$/", "language": "JavaScript", "kind": "function", "signature": "(user)"}, {"_type": "tag", "name": "deleteDocument", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function deleteDocument(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "getDocument", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function getDocument(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "getUser", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function getUser(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "healthCheck", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function healthCheck() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^async function http(path, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, options = {})"}, {"_type": "tag", "name": "listDocuments", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function listDocuments() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "listUsers", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function listUsers() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "updateUser", "path": "/home/kavia/workspace/code-generation/company-data-qa-platform-2984-2994/qanda_frontend/src/services/api.js", "pattern": "/^export async function updateUser(id, user) {$/", "language": "JavaScript", "kind": "function", "signature": "(id, user)"}], "hash": "4fbba89373923b81fb0932e3c2aa3f0b", "format-version": 4, "code-base-name": "qanda_frontend", "filename": "qanda_frontend/src/services/api.js"}